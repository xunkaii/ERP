SELECT EMPLOYEE_NAME,STORE_NUM,JOB_LEVEL  FROM EMPLOYEE;

SELECT EMPLOYEE_NAME,STORE_NUM  FROM EMPLOYEE WHERE auth IN (1,2);


SELECT count(*) FROM STORE s, EMPLOYEE e 
	WHERE s.STORE_NUM =e.STORE_NUM
	AND s.STORE_NUM = 2;

SELECT EMPLOYEE_NAME FROM EMPLOYEE WHERE auth IN (1,2)
		AND STORE_NUM = 1;
	
SELECT EMPLOYEE_NAME FROM EMPLOYEE
WHERE auth = 2
AND STORE_NUM = ;
SELECT EMPLOYEE_NAME FROM EMPLOYEE
WHERE auth = 1;


SELECT * FROM
	( SELECT rownum cnt, s.* from
			( SELECT * 
				FROM STORE
				WHERE store_name LIKE '%%'
				ORDER BY STORE_AREA desc
			) s
	)
WHERE cnt BETWEEN 1 AND 5;


( SELECT rownum cnt, s.* from
			( SELECT * 
				FROM STORE
				WHERE store_name LIKE '%%'
				ORDER BY STORE_AREA desc
			) s
	);




SELECT count(*) FROM store
WHERE STORE_NAME Like '%서%';
INSERT INTO STORE s VALUES (1,'강남점','서울','강남','테헤란로','02-6548-4651',60,10,10,'');
UPDATE store 
	SET latitude =33.50708,
		longitude = 126.49275
	WHERE STORE_NUM = 1;

SELECT * FROM EMPLOYEE e ;
DELETE FROM STORE WHERE city = '서울';
DROP TABLE store CASCADE CONSTRAINTS;
CREATE TABLE STORE(
	STORE_NUM NUMBER PRIMARY KEY,
	STORE_NAME VARCHAR2(50),
	CITY VARCHAR2(50),
	REGION VARCHAR2(50),
	DETAIL_ADDRESS VARCHAR2(100),
	CONTACT VARCHAR2(20),
	STORE_AREA NUMBER,
	LATITUDE VARCHAR2(50),
	LONGITUDE VARCHAR2(50),
	REG_DATE DATE
);

DROP SEQUENCE store_seq;
CREATE SEQUENCE STORE_SEQ
	START WITH 1;
SELECT STORE_SEQ.nextval FROM dual;

SELECT * FROM store 
WHERE STORE_NAME LIKE '%%' 
AND city LIKE '%%' 
AND region LIKE '%%';

SELECT DISTINCT city FROM store;


SELECT * FROM store;
SELECT * FROM EMPLOYEE e ;

-- 전체 점포명 & sch
SELECT 
	STORE_NUM,
	STORE_NAME,
	city,
	REGION,
	DETAIL_ADDRESS,
	CONTACT ,
	STORE_AREA ,
	LATITUDE ,
	LONGITUDE ,
	to_char(REG_DATE,'YYYY-MM-DD') reg_date
WHERE STORE_NAME Like '%%';

-- 점포별 직원수
SELECT count(*) FROM STORE s, EMPLOYEE e 
WHERE s.STORE_NUM =e.STORE_NUM 
AND s.STORE_NUM = 1;

-- 점포별 점주
SELECT EMPLOYEE_NAME  FROM EMPLOYEE WHERE auth = 2
AND STORE_NUM = 4; 



INSERT INTO employee values(emp_seq.nextval,2,'강준규','강준규','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,3,'김학수','김학수','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,4,'김동현','김동현','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,5,'정준혁','정준혁','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,6,'강경웅','강경웅','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,7,'박다솜','박다솜','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,8,'서지우','서지우','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,9,'윤석민','윤석민','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,10,'양현수','양현수','1234','gggg@gmail.com','010-1234-1234','점주',sysdate,'경력직',sysdate,'/',2);
INSERT INTO employee values(emp_seq.nextval,2,'기막수','기막수','1234','gggg@gmail.com','010-1234-1234','팀장',sysdate,'경력직',sysdate,'/',2);


SELECT * FROM store WHERE STORE_NUM = 0;

SELECT * FROM store;
UPDATE STORE 
	SET store_name = '',
		CONTACT = '',
		STORE_AREA = 0,
		LATITUDE = 0,
		LONGITUDE = 0
	WHERE STORE_NUM = 1; 

SELECT * FROM EMPLOYEE e ;

DELETE store WHERE store_num = 1;

INSERT INTO STORE (STORE_NUM ) VALUES (STORE_SEQ.nextval);
SELECT * FROM STORE s ;
DELETE store WHERE store_name IS NULL;

select *
		from (
		select rownum cnt, level, b.*
		from board b
		where 1=1
		and subject like '%'||#{subject}||'%'
		and writer like '%'||#{writer}||'%'
		start with refno = 0
		connect by prior no = refno
		order siblings by no DESC )
	where cnt between #{start} and #{end};

SELECT * FROM
		( SELECT rownum cnt, s.* from
				( SELECT * 
					FROM STORE
					WHERE store_name LIKE '%%'
					ORDER BY STORE_AREA desc
				) s
		)
	WHERE cnt BETWEEN 1 AND 10;

SELECT * FROM
(
	SELECT rownum cnt, s.* FROM
	(
		SELECT * 
		FROM STORE
		WHERE store_name LIKE '%%'
		ORDER BY STORE_AREA DESC
	) s
)
WHERE cnt BETWEEN 1 AND 5;





SELECT * FROM EMPLOYEE e ;


SELECT * FROM (
SELECT rownum cnt, s.* 
FROM store s
WHERE store_name LIKE '%'||''||'%'
AND city LIKE '%'||''||'%'
ORDER BY STORE_AREA desc
)
WHERE cnt BETWEEN 3 AND 8;
	
SELECT rownum cnt, s.* 
FROM store s
WHERE store_name LIKE '%'||''||'%'
AND city LIKE '%'||''||'%'
ORDER BY STORE_AREA desc;

-- 검색된 전체 수
SELECT count(*) FROM store
WHERE STORE_NAME Like '%'||''||'%'

-- 페이징 처리
SELECT * FROM
(
SELECT rownum cnt,s.*
from
	(
		SELECT * 
		FROM STORE
		WHERE store_name LIKE '%'||''||'%'
		ORDER BY STORE_AREA desc
	) s
)
WHERE cnt BETWEEN 3 AND 8;


SELECT * FROM ORDER_ERP oe ;
SELECT * FROM sale;

SELECT hop.PRODUCT_NUM, pp.*, bi.* 
FROM HEAD_OFFICE_PRODUCT hop,PRODUCT_PROPERTIES pp ,BRAND_ITEM bi 
WHERE hop.PROPERTIES_NUM = pp.PROPERTIES_NUM
AND hop.ITEM_NUM = bi.ITEM_NUM ;



SELECT * FROM PRODUCT_PROPERTIES pp WHERE PROPERTIES_NUM = 100;
SELECT * FROM PRODUCT_PROPERTIES pp WHERE REF_NUM  = 100;
SELECT * FROM PRODUCT_PROPERTIES pp WHERE PROPERTIES_NUM = 200;
SELECT * FROM PRODUCT_PROPERTIES pp WHERE REF_NUM  = 200;
SELECT * FROM PRODUCT_PROPERTIES;
SELECT * FROM BRAND_ITEM bi WHERE ITEM_NUM = 1000;
SELECT * FROM BRAND_ITEM bi WHERE ref_num = 1000;
SELECT * FROM BRAND_ITEM bi;

INSERT ALL
INTO PRODUCT_PROPERTIES VALUES (200,'레드',0)
INTO PRODUCT_PROPERTIES VALUES (201,'230',200)
INTO PRODUCT_PROPERTIES VALUES (202,'240',200)
INTO PRODUCT_PROPERTIES VALUES (203,'250',200)
INTO PRODUCT_PROPERTIES VALUES (204,'260',200)
INTO PRODUCT_PROPERTIES VALUES (205,'270',200)
INTO PRODUCT_PROPERTIES VALUES (206,'280',200)
SELECT * FROM dual;

SELECT * FROM HEAD_OFFICE_PRODUCT hop ;

DELETE brand_item WHERE item_num = 1011;



SELECT * FROM EMPLOYEE e ;
DELETE EMPLOYEE WHERE employee_name = '기막수';
--점포명	점주	매출	전화번호	주소

SELECT e.EMPLOYEE_NAME, s.*
FROM store s, EMPLOYEE e 
WHERE s.STORE_NUM =e.STORE_NUM ;

-- 점포별 매출
SELECT s.STORE_NUM, s.STORE_NAME,e.EMPLOYEE_NAME ,sum(s2.TOTAL_PRICE) total_price,s.CONTACT ,s.CITY ,s.REGION ,s.DETAIL_ADDRESS 
FROM STORE s,SALE s2,STORE_STORAGE ss, EMPLOYEE e 
WHERE ss.STORE_NUM = s.STORE_NUM 
AND s2.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
AND s.STORE_NUM = e.STORE_NUM
AND e.AUTH = 2
AND s.STORE_NAME like '%%' 
AND s2.SALE_DATE BETWEEN sysdate-365 AND sysdate
GROUP BY s.STORE_NUM, e.EMPLOYEE_NAME, s.STORE_NAME,s.CONTACT,s.CITY ,s.REGION ,s.DETAIL_ADDRESS 
ORDER BY total_price desc;


-- 브랜드별 매출
SELECT 
	bb.ref_num, 
	bbi.ITEM_NAME,
	bb.PRODUCT_NUM, 
	s.total_price
FROM 
	(SELECT 
			bi.ITEM_NUM,
			bi.REF_NUM,
			hop.PRODUCT_NUM 
		FROM 
			HEAD_OFFICE_PRODUCT hop,
			BRAND_ITEM bi
		WHERE 
			hop.ITEM_NUM = bi.ITEM_NUM) bb,
	BRAND_ITEM bbi,
	STORE_STORAGE ss,
	SALE s
WHERE bb.ref_num = bbi.REF_num
AND ss.product_num = bb.product_num
AND ss.store_product_id = s.store_product_id;

SELECT 
	bi.REF_NUM,
	bi.ITEM_NAME,
	hop.PRODUCT_NUM 
FROM 
	HEAD_OFFICE_PRODUCT hop,
	BRAND_ITEM bi
WHERE 
	hop.ITEM_NUM = bi.ITEM_NUM ;

SELECT * FROM HEAD_OFFICE_PRODUCT hop ;
(SELECT * FROM BRAND_ITEM bi
WHERE REF_NUM = 0);

SELECT REF_NUM  FROM BRAND_ITEM bi 
GROUP BY REF_NUM;

SELECT bb.item_name, bb.brand_num,
	SUM(CASE WHEN EXTRACT(MONTH FROM s.SALE_DATE) = EXTRACT(MONTH FROM SYSDATE) THEN s.TOTAL_PRICE ELSE 0 END) AS CURRENT_MONTH,
    SUM(CASE WHEN EXTRACT(YEAR FROM s.SALE_DATE) = EXTRACT(YEAR FROM SYSDATE) THEN s.TOTAL_PRICE ELSE 0 END) AS CURRENT_YEAR
FROM HEAD_OFFICE_PRODUCT hop,STORE_STORAGE ss ,SALE s,
	(SELECT bi2.ITEM_NAME, bi2.ITEM_NUM brand_num, bi.ITEM_NUM  FROM BRAND_ITEM bi,BRAND_ITEM bi2  WHERE bi.REF_NUM = bi2.ITEM_NUM) bb
WHERE hop.PRODUCT_NUM = ss.PRODUCT_NUM 
AND ss.STORE_PRODUCT_ID = s.STORE_PRODUCT_ID
AND bb.item_num = hop.ITEM_NUM 
AND bb.item_name LIKE '%%'
GROUP BY bb.item_name, bb.brand_num
ORDER BY bb.brand_num;

(SELECT bi2.ITEM_NAME, bi2.ITEM_NUM brand_num, bi.ITEM_NUM  FROM BRAND_ITEM bi,BRAND_ITEM bi2  WHERE bi.REF_NUM = bi2.ITEM_NUM) ;


SELECT * FROM SALE s ;
SELECT * FROM HEAD_OFFICE_PRODUCT hop;


SELECT * FROM STORE s,SALE s2,STORE_STORAGE ss 
WHERE ss.STORE_NUM = s.STORE_NUM 
AND s2.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID ;

SELECT * FROM store;
SELECT * FROM SALE s ORDER BY SALE_ID  ;
SELECT * FROM STORE_STORAGE ss ;
SELECT * FROM HEAD_OFFICE_PRODUCT hop ;
SELECT * FROM BRAND_ITEM bi ;
SELECT * FROM PRODUCT_PROPERTIES pp ;

INSERT ALL 
INTO HEAD_OFFICE_PRODUCT VALUES (5,201,2021,1000,sysdate,0)
INTO HEAD_OFFICE_PRODUCT VALUES (6,202,2021,1000,sysdate,0)
INTO HEAD_OFFICE_PRODUCT VALUES (7,101,2021,1000,sysdate,0)
INTO HEAD_OFFICE_PRODUCT VALUES (8,105,2021,1000,sysdate,0)
SELECT * FROM dual;

INSERT INTO STORE_STORAGE ss VALUES ('1',1,1,10);
INSERT INTO STORE_STORAGE ss VALUES ('2',2,2,100);
INSERT INTO STORE_STORAGE ss VALUES ('3',3,3,100);
INSERT INTO STORE_STORAGE ss VALUES ('4',4,4,100);
INSERT INTO STORE_STORAGE ss VALUES ('5',1,5,100);
INSERT INTO STORE_STORAGE ss VALUES ('6',2,6,100);
INSERT INTO STORE_STORAGE ss VALUES ('7',3,7,100);
INSERT INTO STORE_STORAGE ss VALUES ('8',4,8,100);
INSERT INTO STORE_STORAGE ss VALUES ('9',1,9,100);
INSERT INTO STORE_STORAGE ss VALUES ('10',4,1,100);
INSERT INTO STORE_STORAGE ss VALUES ('11',5,2,100);
INSERT INTO STORE_STORAGE ss VALUES ('12',6,3,100);
INSERT INTO STORE_STORAGE ss VALUES ('13',7,4,100);
INSERT INTO STORE_STORAGE ss VALUES ('14',8,5,100);
INSERT INTO STORE_STORAGE ss VALUES ('15',5,6,100);
INSERT INTO STORE_STORAGE ss VALUES ('16',6,7,100);
INSERT INTO STORE_STORAGE ss VALUES ('17',7,8,100);
INSERT INTO STORE_STORAGE ss VALUES ('18',8,9,100);
INSERT INTO STORE_STORAGE ss VALUES ('19',8,9,100);
INSERT INTO STORE_STORAGE ss VALUES ('20',10,9,100);
SELECT * FROM STORE s ;

INSERT INTO SALE s VALUES ('1',1,sysdate,5,350000);
INSERT INTO SALE s VALUES ('2',1,sysdate,7,450000);
INSERT INTO SALE s VALUES ('3',1,sysdate,6,400000);
INSERT INTO SALE s VALUES ('4',2,sysdate,7,350000);
INSERT INTO SALE s VALUES ('5',2,sysdate,9,550000);
INSERT INTO SALE s VALUES ('6',3,sysdate,2,100000);
INSERT INTO SALE s VALUES ('7',4,sysdate,3,140000);
INSERT INTO SALE s VALUES ('8',5,sysdate,4,230000);
INSERT INTO SALE s VALUES ('9',6,sysdate,5,420000);
INSERT INTO SALE s VALUES ('10',6,sysdate,4,440000);
INSERT INTO SALE s VALUES ('11',7,sysdate,1,120000);
INSERT INTO SALE s VALUES ('12',8,sysdate,2,240000);
INSERT INTO SALE s VALUES ('13',9,sysdate,3,360000);
SELECT * FROM STORE_STORAGE ss ;

INSERT all
INTO SALE VALUES ('40',1,'2022-08-01',3,360000)
INTO SALE VALUES ('41',1,'2022-08-11',3,360000)
INTO SALE VALUES ('42',1,'2022-08-12',3,360000)
INTO SALE VALUES ('43',10,'2022-07-11',3,360000)
INTO SALE VALUES ('44',10,'2022-07-15',3,360000)
INTO SALE VALUES ('45',10,'2022-07-18',3,360000)
SELECT * FROM dual;

INSERT all
INTO SALE VALUES ('30',10,'2022-12-01',5,600000)
INTO SALE VALUES ('31',11,'2022-12-25',3,360000)
INTO SALE VALUES ('32',12,'2022-11-11',3,360000)
INTO SALE VALUES ('33',13,'2022-11-15',3,360000)
INTO SALE VALUES ('34',10,'2022-11-12',3,360000)
INTO SALE VALUES ('35',15,'2023-07-22',3,360000)
INTO SALE VALUES ('36',16,'2023-08-03',3,360000)
INTO SALE VALUES ('37',17,'2023-08-05',3,360000)
INTO SALE VALUES ('38',12,'2023-08-06',3,360000)
INTO SALE VALUES ('39',13,'2023-08-07',3,360000)
SELECT * FROM dual;


SELECT STORE_NUM ,EMPLOYEE_NAME,AUTH  FROM EMPLOYEE WHERE auth IN (1,2) ORDER BY STORE_NUM ;
SELECT *  FROM EMPLOYEE WHERE STORE_NUM IN (8,9) ORDER BY STORE_NUM ;




SELECT EMPLOYEE_NAME FROM EMPLOYEE WHERE auth IN (1,2)
		AND STORE_NUM = 8;
-- 점포별 일 매출		
SELECT
	s2.STORE_NAME,
	sum(s.TOTAL_PRICE) title,
	to_char(s.SALE_DATE,'YYYY-MM-DD') "START"
FROM SALE s,STORE_STORAGE ss, STORE s2
WHERE 
	s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
AND ss.STORE_NUM = s2.STORE_NUM 
AND ss.STORE_NUM = 1
GROUP BY s.SALE_DATE,s2.STORE_NAME ;




-- 점포별 월 매출
SELECT 
	s2.STORE_NAME,
	sum(s.TOTAL_PRICE) tot_sale,
	s.SALE_DATE
FROM SALE s,STORE_STORAGE ss,STORE s2 
WHERE 
	s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID 
AND ss.STORE_NUM = s2.STORE_NUM 
AND s2.STORE_NAME = '강남점'
AND EXTRACT(MONTH FROM s.SALE_DATE) = 8
AND EXTRACT(YEAR FROM s.SALE_DATE) = 2022
GROUP BY s2.STORE_NAME, s.SALE_DATE;

-- (확인용) 판매내역 by 점포명
SELECT s2.STORE_NAME,
	s.TOTAL_PRICE,
	s.SALE_DATE 
FROM sale s, STORE_STORAGE ss ,STORE s2
WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
AND ss.STORE_NUM = s2.STORE_NUM 
AND s2.STORE_NAME = '강남점'

-- (확인용) 판매내역 by 점포명, 내역년도
(SELECT s2.STORE_NAME,
	s.TOTAL_PRICE,
	s.SALE_DATE 
FROM sale s, STORE_STORAGE ss ,STORE s2
WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
AND ss.STORE_NUM = s2.STORE_NUM 
AND s2.STORE_NAME = '강남점'
AND EXTRACT(YEAR FROM s.sale_date) = 2022);

-- 판매내역 by 점포명, 내역년도, 내역월
SELECT 
	sum(total_price) total_price,
	count(sale_date) count
FROM
	(SELECT s2.STORE_NAME,
		s.TOTAL_PRICE,
		to_char(s.sale_date,'YYYY-MM') sale_date
	FROM sale s, STORE_STORAGE ss ,STORE s2
	WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
	AND ss.STORE_NUM = s2.STORE_NUM 
	AND s2.STORE_NAME = '강남점'
	AND EXTRACT(YEAR FROM s.sale_date) = 2023)
WHERE substr(sale_date,-2) = 3
GROUP BY sale_date;


SELECT 
	sum(total_price) total_price,
	 count(nvl(sale_date, 0)) count
FROM
	(SELECT s2.STORE_NAME,
		s.TOTAL_PRICE,
		to_char(s.sale_date,'YYYY-MM') sale_date
	FROM sale s, STORE_STORAGE ss ,STORE s2
	WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
	AND ss.STORE_NUM = s2.STORE_NUM 
	AND s2.STORE_NAME = '강남점'
	AND EXTRACT(YEAR FROM s.sale_date) = 2022)
WHERE substr(sale_date,-2) = 11
GROUP BY sale_date;



SELECT bb.item_name, bb.brand_num,
		SUM(CASE WHEN EXTRACT(MONTH FROM s.SALE_DATE) = EXTRACT(MONTH FROM SYSDATE) THEN s.TOTAL_PRICE ELSE 0 END) AS CURRENT_MONTH,
	    SUM(CASE WHEN EXTRACT(YEAR FROM s.SALE_DATE) = EXTRACT(YEAR FROM SYSDATE) THEN s.TOTAL_PRICE ELSE 0 END) AS CURRENT_YEAR
		FROM HEAD_OFFICE_PRODUCT hop,STORE_STORAGE ss ,SALE s,
			(SELECT bi2.ITEM_NAME, bi2.ITEM_NUM brand_num, bi.ITEM_NUM  FROM BRAND_ITEM bi,BRAND_ITEM bi2  WHERE bi.REF_NUM = bi2.ITEM_NUM) bb
		WHERE hop.PRODUCT_NUM = ss.PRODUCT_NUM 
		AND ss.STORE_PRODUCT_ID = s.STORE_PRODUCT_ID
		AND bb.item_num = hop.ITEM_NUM 
		AND bb.item_name LIKE '%%'
		GROUP BY bb.item_name, bb.brand_num
		ORDER BY bb.brand_num;

SELECT bi2.ITEM_NAME, bi2.ITEM_NUM brand_num, bi.ITEM_NUM  FROM BRAND_ITEM bi,BRAND_ITEM bi2  WHERE bi.REF_NUM = bi2.ITEM_NUM;
SELECT * FROM HEAD_OFFICE_PRODUCT hop ;

-- 브랜드 별 총 매출
SELECT b.item_name, sum(s.TOTAL_PRICE) tot, EXTRACT(MONTH FROM s.SALE_DATE)
FROM SALE s, STORE_STORAGE ss, HEAD_OFFICE_PRODUCT hop, (SELECT bi2.ITEM_NAME, bi2.ITEM_NUM brand_num, bi.ITEM_NUM  FROM BRAND_ITEM bi,BRAND_ITEM bi2  WHERE bi.REF_NUM = bi2.ITEM_NUM) b
WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID 
AND hop.PRODUCT_NUM = ss.PRODUCT_NUM
AND hop.ITEM_NUM  = b.item_num
AND EXTRACT(MONTH FROM s.SALE_DATE) = '8'
GROUP BY b.item_name, EXTRACT(MONTH FROM s.SALE_DATE) ;


---매출관리 점포 전용--------------------------------
SELECT * FROM HEAD_OFFICE_PRODUCT hop ;
SELECT * FROM STORE_STORAGE ss ;
SELECT * FROM SALE s ;

-- 1 브랜드/상품명
(SELECT bi.ITEM_NUM,bi2.ITEM_NAME,bi.ITEM_NAME
FROM BRAND_ITEM bi,BRAND_ITEM bi2  
WHERE bi.REF_NUM = bi2.ITEM_NUM);

-- 2 색상/사이즈 
(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
WHERE pp.REF_NUM =pp2.PROPERTIES_NUM);

-- 3 본사 전체 물품 정보
SELECT h.PRODUCT_NUM ,b.*,c.*,h.COST  
FROM HEAD_OFFICE_PRODUCT h,
	(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
	FROM BRAND_ITEM bi,BRAND_ITEM bi2  
	WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
	(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
	FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
	WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
WHERE h.ITEM_NUM = b.item_num
AND h.PROPERTIES_NUM = c.properties_num;


	


-- 4 점포별 판매내역
SELECT s2.STORE_NAME, ss.PRODUCT_NUM,s.SALE_COUNT,
	s.TOTAL_PRICE,
	s.SALE_DATE 
FROM sale s, STORE_STORAGE ss ,STORE s2
WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
AND ss.STORE_NUM = s2.STORE_NUM
AND s2.STORE_NAME = '강남점';

-- 5 판매 내역(+상품정보)
SELECT * FROM
	(SELECT s2.STORE_NAME, ss.PRODUCT_NUM,s.SALE_COUNT,
		s.TOTAL_PRICE,
		to_char(s.SALE_DATE,'YYYY-MM-DD') sale_date
	FROM sale s, STORE_STORAGE ss ,STORE s2
	WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
	AND ss.STORE_NUM = s2.STORE_NUM) sts,
	(SELECT h.PRODUCT_NUM ,bra.*,col.*,h.COST  
	FROM HEAD_OFFICE_PRODUCT h,
		(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
		FROM BRAND_ITEM bi,BRAND_ITEM bi2  
		WHERE bi.REF_NUM = bi2.ITEM_NUM) bra,
		(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
		FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
		WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) col
	WHERE h.ITEM_NUM = bra.item_num
	AND h.PROPERTIES_NUM = col.properties_num) hop
WHERE hop.product_num = sts.product_num
AND sts.store_name = '강남점'
AND sts.sale_date = '2023-08-21';

-- 점포 별 창고 재고?
SELECT
	hop.PRODUCT_NUM,
    hop.brand,
    hop.ITEM_NAME,
    hop.COLOR AS color,
    hop.sizee,
    hop.COST,
    ss.STORAGE_COUNT,
    hop.PROPERTIES_NUM,
    hop.ITEM_NUM
FROM STORE_STORAGE ss,
	(SELECT h.PRODUCT_NUM ,b.*,c.*,h.COST  
	FROM HEAD_OFFICE_PRODUCT h,
		(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
		FROM BRAND_ITEM bi,BRAND_ITEM bi2  
		WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
		(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZEE" 
		FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
		WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
	WHERE h.ITEM_NUM = b.item_num
	AND h.PROPERTIES_NUM = c.properties_num) hop, store s
WHERE hop.product_num = ss.PRODUCT_NUM 
AND ss.STORE_NUM = s.store_num
AND s.store_num = 1;


SELECT employee_name, job_level, auth
		FROM employee 
		WHERE id= #{id} AND password = #{password}

SELECT employee_name, job_level, auth, s.STORE_NAME  
FROM EMPLOYEE e,STORE s  
WHERE e.STORE_NUM =s.STORE_NUM
AND id = '오길동' AND PASSWORD = '1234';
	
-- 전체 직원 수
SELECT count(*) emp FROM EMPLOYEE e;

-- 총 점포 수
SELECT count(*) store FROM STORE s ;

-- 입점 브랜드 수
SELECT count(DISTINCT (b.brand)) brand  
FROM HEAD_OFFICE_PRODUCT h,
	(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
	FROM BRAND_ITEM bi,BRAND_ITEM bi2  
	WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
	(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
	FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
	WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
WHERE h.ITEM_NUM = b.item_num
AND h.PROPERTIES_NUM = c.properties_num;

-- 상품 수
SELECT count(DISTINCT b.item_name) item  
FROM HEAD_OFFICE_PRODUCT h,
	(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
	FROM BRAND_ITEM bi,BRAND_ITEM bi2  
	WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
	(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
	FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
	WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
WHERE h.ITEM_NUM = b.item_num
AND h.PROPERTIES_NUM = c.properties_num;

--
SELECT * FROM STORE s, HEAD_OFFICE_PRODUCT hop, STORE_STORAGE ss 
WHERE ss.STORE_NUM = s.STORE_NUM;


-- 대시보드

-- 1) 브랜드 별 판매 카운트
SELECT * FROM
(SELECT h.brand,count(h.brand) "SALE_CNT"
FROM SALE s,STORE_STORAGE ss,
		(
			SELECT h.PRODUCT_NUM,b.brand  
			FROM HEAD_OFFICE_PRODUCT h,
				(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
				FROM BRAND_ITEM bi,BRAND_ITEM bi2  
				WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
				(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
				FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
				WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
			WHERE h.ITEM_NUM = b.item_num
			AND h.PROPERTIES_NUM = c.properties_num
		)	h
WHERE ss.PRODUCT_NUM = h.product_num
AND s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
GROUP BY h.brand
ORDER BY h.brand);

-- 2) 기간별 판매액
SELECT SALE_DATE, sum(TOT_PRICE) TOTAL_PRICE 
FROM
	(SELECT to_char(sale_date,'YYYY-MM') SALE_DATE , sum(TOTAL_PRICE) tot_price 
	FROM SALE s
	GROUP BY sale_date
	ORDER BY SALE_DATE)
WHERE SALE_DATE LIKE (to_char(EXTRACT(YEAR FROM sysdate)))||'%'
GROUP BY SALE_DATE
ORDER BY SALE_DATE ;


-- 발주 내역(결재 상태 진행중) 가장 가까운 종료 순
SELECT * FROM(
SELECT rownum cnt, o.* from
(SELECT to_char(end_date,'YYYY-MM-DD') AS end_date, s.store_name, b.ITEM_NAME, pp.COLOR AS color, p.COLOR AS "SIZE"
from order_erp oe
JOIN employee e ON oe.EMPLOYEE_NUM = e.EMPLOYEE_NUM 
JOIN store s ON e.STORE_NUM = s.STORE_NUM
JOIN HEAD_OFFICE_PRODUCT hop ON oe.PRODUCT_NUM = hop.PRODUCT_NUM
JOIN BRAND_ITEM b ON hop.ITEM_NUM = b.ITEM_NUM 
JOIN PRODUCT_PROPERTIES p ON hop.PROPERTIES_NUM = p.PROPERTIES_NUM
LEFT JOIN BRAND_ITEM bb ON b.REF_NUM = bb.ITEM_NUM  
LEFT JOIN PRODUCT_PROPERTIES pp ON p.REF_NUM = pp.PROPERTIES_NUM
WHERE order_status = 0
order by end_date asc) o);
	
-- 최근 12개월 월별 총매출
SELECT SALE_DATE, sum(TOT_PRICE) TOTAL_PRICE 
FROM
	(SELECT to_char(sale_date,'YYYY-MM') SALE_DATE , sum(TOTAL_PRICE) tot_price 
	FROM SALE s
	GROUP BY sale_date
	ORDER BY SALE_DATE)
WHERE SALE_DATE >= to_char(ADD_MONTHS(sysdate, -12), 'YYYY-MM')
GROUP BY SALE_DATE
ORDER BY SALE_DATE;

-- 현재연도 월별 총매출
WITH all_months AS (
		SELECT to_char(ADD_MONTHS(TRUNC(sysdate, 'YYYY'), LEVEL - 1), 'YYYY-MM') AS sale_month
		FROM dual
		CONNECT BY LEVEL <= 12 -- 최근 12개월
	),
		sales_data AS (
		SELECT
			to_char(sale_date, 'YYYY-MM') AS sale_month,
			sum(TOTAL_PRICE) AS tot_price
		FROM SALE s
		GROUP BY to_char(sale_date, 'YYYY-MM')
	)
SELECT
  am.sale_month,
  COALESCE(sd.tot_price, 0) AS total_price
FROM all_months am
LEFT JOIN sales_data sd ON am.sale_month = sd.sale_month
ORDER BY am.sale_month;

-- 올해 점포별 총 매출
SELECT s2.STORE_NAME,sum(s.TOTAL_PRICE) total_price
FROM sale s, STORE_STORAGE ss ,STORE s2
WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
AND ss.STORE_NUM = s2.STORE_NUM
AND to_char(s.SALE_DATE,'YYYY') = to_char(sysdate,'YYYY')
GROUP BY s2.STORE_NAME
ORDER BY TOTAL_PRICE desc;

-- 입점 브랜드 별 상품 수
SELECT b.ref_num brand_num,b.brand, COUNT(b.brand) cnt
FROM HEAD_OFFICE_PRODUCT h,
	(SELECT bi.ref_num,bi2.ITEM_NAME brand,bi.ITEM_NAME,bi.item_num
	FROM BRAND_ITEM bi,BRAND_ITEM bi2  
	WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
	(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
	FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
	WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
WHERE h.ITEM_NUM = b.item_num
AND h.PROPERTIES_NUM = c.properties_num
AND b.brand LIKE '%%'
GROUP BY b.brand, b.ref_num;


SELECT b.ref_num brand_num,b.brand
FROM HEAD_OFFICE_PRODUCT h,
	(SELECT bi.ref_num,bi2.ITEM_NAME brand,bi.ITEM_NAME,bi.item_num
	FROM BRAND_ITEM bi,BRAND_ITEM bi2  
	WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
	(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
	FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
	WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
WHERE h.ITEM_NUM = b.item_num
AND h.PRODUCT_NUM = c.properties_num;

SELECT * FROM HEAD_OFFICE_PRODUCT hop ;

SELECT bi.ref_num,bi2.ITEM_NAME brand,bi.ITEM_NAME,bi.item_num
	FROM BRAND_ITEM bi,BRAND_ITEM bi2  
	WHERE bi.REF_NUM = bi2.ITEM_NUM;








SELECT * FROM SALE s ;

SELECT * FROM STORE_STORAGE ss 
WHERE STORE_NUM =1;
SELECT * FROM HEAD_OFFICE_PRODUCT hop 
WHERE PRODUCT_NUM = 4;

--

SELECT * FROM
	(SELECT s2.STORE_NAME, ss.PRODUCT_NUM,s.SALE_COUNT,
		s.TOTAL_PRICE,
		to_char(s.SALE_DATE,'YYYY-MM-DD') sale_date
	FROM sale s, STORE_STORAGE ss ,STORE s2
	WHERE s.STORE_PRODUCT_ID = ss.STORE_PRODUCT_ID
	AND ss.STORE_NUM = s2.STORE_NUM) sts,
	(SELECT h.PRODUCT_NUM ,bra.*,col.*,h.COST  
	FROM HEAD_OFFICE_PRODUCT h,
		(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
		FROM BRAND_ITEM bi,BRAND_ITEM bi2  
		WHERE bi.REF_NUM = bi2.ITEM_NUM) bra,
		(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
		FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
		WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) col
	WHERE h.ITEM_NUM = bra.item_num
	AND h.PROPERTIES_NUM = col.properties_num) hop
WHERE hop.product_num = sts.product_num;

SELECT 
    h.PRODUCT_NUM,
    bb.ITEM_NAME AS brand,
    b.ITEM_NAME,
    pp.COLOR AS color,
    p.COLOR AS prd_size,
    h.COST,
    h.REG_DATE,
    h.PRODUCT_COUNT
FROM HEAD_OFFICE_PRODUCT h
JOIN BRAND_ITEM b ON h.ITEM_NUM = b.ITEM_NUM
JOIN PRODUCT_PROPERTIES p ON h.PROPERTIES_NUM = p.PROPERTIES_NUM
LEFT JOIN PRODUCT_PROPERTIES pp ON p.REF_NUM = pp.PROPERTIES_NUM
LEFT JOIN BRAND_ITEM bb ON b.REF_NUM = bb.ITEM_NUM 
WHERE b.ITEM_NAME like '%%'
order by bb.item_name ASC;

SELECT * FROM STORE_STORAGE ss2 ;

SELECT
	hop.PRODUCT_NUM,
    hop.brand,
    hop.ITEM_NAME,
    hop.COLOR AS color,
    hop.sizee,
    hop.COST,
    ss.STORAGE_COUNT,
    hop.PROPERTIES_NUM,
    hop.ITEM_NUM
FROM STORE_STORAGE ss,
	(SELECT h.PRODUCT_NUM ,b.*,c.*,h.COST  
	FROM HEAD_OFFICE_PRODUCT h,
		(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
		FROM BRAND_ITEM bi,BRAND_ITEM bi2  
		WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
		(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZEE" 
		FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
		WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
	WHERE h.ITEM_NUM = b.item_num
	AND h.PROPERTIES_NUM = c.properties_num) hop, store s
WHERE hop.product_num = ss.PRODUCT_NUM 
AND ss.STORE_NUM = s.store_num
AND s.store_num = 1;

-- 판매내역 등록
-- 1) 점포리스트
SELECT STORE_NUM ,STORE_NAME  FROM STORE;

-- 2) 상품리스트
SELECT STORE_NUM ,STORE_NAME  FROM STORE
WHERE STORE_NUM =1;
SELECT ss.STORE_PRODUCT_ID ,ss.STORE_NUM,hop.PROPERTIES_NUM  FROM STORE_STORAGE ss,HEAD_OFFICE_PRODUCT hop ;
SELECT * FROM STORE_STORAGE ss ;

-- 점포 선택 시 검색될 상품리스트
SELECT hop.*,ss.store_num,ss.storage_count cnt,ss.store_product_id FROM
	(SELECT h.PRODUCT_NUM ,b.*,c.*,h.COST  
	FROM HEAD_OFFICE_PRODUCT h,
		(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
		FROM BRAND_ITEM bi,BRAND_ITEM bi2  
		WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
		(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
		FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
		WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
	WHERE h.ITEM_NUM = b.item_num
	AND h.PROPERTIES_NUM = c.properties_num) hop,
	store_storage ss
WHERE hop.product_num = ss.product_num
AND ss.store_num = 1;

-- 상품명 검색(선택한 점포번호 고정)
SELECT hop.*,ss.store_num,ss.storage_count cnt,ss.store_product_id FROM
	(SELECT h.PRODUCT_NUM ,b.*,c.*,h.COST  
	FROM HEAD_OFFICE_PRODUCT h,
		(SELECT bi.ITEM_NUM,bi2.ITEM_NAME brand,bi.ITEM_NAME
		FROM BRAND_ITEM bi,BRAND_ITEM bi2  
		WHERE bi.REF_NUM = bi2.ITEM_NUM) b,
		(SELECT pp.PROPERTIES_NUM,pp2.COLOR color,pp.COLOR "SIZE" 
		FROM PRODUCT_PROPERTIES pp, PRODUCT_PROPERTIES pp2
		WHERE pp.REF_NUM =pp2.PROPERTIES_NUM) c
	WHERE h.ITEM_NUM = b.item_num
	AND h.PROPERTIES_NUM = c.properties_num) hop,
	store_storage ss
WHERE hop.product_num = ss.product_num
AND ss.store_num = 1
AND hop.item_name LIKE '%%';

CREATE SEQUENCE sale_seq
	START WITH 46;
DROP SEQUENCE sale_seq;
SELECT * FROM sale;
-- INSERT INTO SALE VALUES (sale_seq.nextval,stPrdId,Sale_Date,Sale_Count,Total_Price) 
INSERT INTO sale VALUES (sale_seq.nextVal,1,sysdate,1,100000);